From: Tobias Heider <me@tobhe.de>
Date: Fri, 31 Mar 2023 02:24:45 +0200
Subject: Fixup first-boot for Ubuntu

---
 first-boot | 25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

diff --git a/first-boot b/first-boot
index d1d0305..434ae98 100755
--- a/first-boot
+++ b/first-boot
@@ -1,17 +1,24 @@
 #!/bin/sh
 # SPDX-License-Identifier: MIT
 
+set -x
 set -e
 
+cleanup () {
+    udevadm control -S
+}
+trap cleanup EXIT
+
+root_uuid_old=$(findmnt -n -o UUID /)
 root_dev=$(findmnt -n -o SOURCE /)
 efi_dev=$(findmnt -n -o SOURCE /boot/efi)
-root_uuid_old=$(findmnt -n -o UUID /)
 
 if [ -e "$root_dev" ]; then
     echo "Randomizing root filesystem UUID..."
+    udevadm control -s
     tune2fs -U random "$root_dev"
-
     root_uuid="$(blkid -c /dev/null "$root_dev" -o export | grep '^UUID=')"
+    udevadm control -S
     echo "Root filesystem: $root_uuid"
     echo
 fi
@@ -20,12 +27,10 @@ if [ -e "$efi_dev" ] && \
     blkid "$efi_dev" | grep -q 'TYPE="vfat"'; then
 
     echo "Randomizing EFI system partition UUID..."
-    # Ugly... why isn't there a command to do this?
-    ssize="$(blockdev --getss "$efi_dev")"
-    dd bs=1 seek=67 count=4 conv=notrunc if=/dev/urandom of="$efi_dev"
-    dd bs=1 skip=67 seek=$((67+6*$ssize)) count=4 conv=notrunc if="$efi_dev" of="$efi_dev"
-
+    udevadm control -s
+    fatlabel -i -r "$efi_dev"
     efi_uuid="$(blkid -c /dev/null "$efi_dev" -o export | grep '^UUID=')"
+    udevadm control -S
     echo "EFI partition: $efi_uuid"
     echo
 fi
@@ -39,10 +44,14 @@ EOF
     echo
 fi
 
+# Wait for udev and remount ESP
+udevadm settle
+systemctl daemon-reload
+systemctl restart boot-efi.mount
+
 # XXX: grub-probe will look for the old UUID, this will keep it happy.
 #      sleep 1 is needed to make sure the new dev exists.
 if [ ! -z "$root_uuid" ]; then
-    sleep 1
     ln -s "/dev/disk/by-uuid/$(echo "$root_uuid" | cut -d "=" -f2)" "/dev/disk/by-uuid/$root_uuid_old"
 fi
 
